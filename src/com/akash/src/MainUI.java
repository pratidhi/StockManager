/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.akash.src;

import com.akash.db.AccessoriesStockHandler;
import com.akash.db.ClientHandler;
import com.akash.db.CreateAllTables;
import com.akash.db.PhoneStockHandler;
import com.akash.db.UserHandler;
import java.awt.Desktop;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.ServiceUI;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;

/**
 *
 * @author akash
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    UserModel model = null;
    float netAmout = 0.0f;
    float netIncomming = 0.0f;
    ArrayList<InvoiceModel> invoiceList = new ArrayList<>();

    public MainUI() {
        initComponents();
        loginPanel.setVisible(true);
        signupPanel.setVisible(false);
        landingPanel.setVisible(false);

        settings.setVisible(false);
        bill.setVisible(false);
        Gmail.setVisible(false);
        stock.setVisible(false);
        barcode.setVisible(false);
        client.setVisible(false);

        searchStock.setVisible(true);
        Heading.setText("Search in Stock");
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("bars.png")));
        initFunctionalities();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        landingPanel = new javax.swing.JPanel();
        menu = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        Header = new javax.swing.JPanel();
        Heading = new javax.swing.JLabel();
        content = new javax.swing.JPanel();
        bill = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        bill_invoiceno = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        bill_pid = new javax.swing.JTextField();
        bill_qty = new javax.swing.JTextField();
        bill_price_per_unit = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        bill_clientname = new javax.swing.JTextField();
        bill_clientphone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        bill_clientaddress = new javax.swing.JTextArea();
        bill_include_checkbox = new javax.swing.JCheckBox();
        bill_gstrate = new javax.swing.JTextField();
        bill_checkinstock_btn = new javax.swing.JButton();
        bill_addproduct_btn = new javax.swing.JButton();
        bill_generatebill_btn = new javax.swing.JButton();
        bill_resetbill_btn = new javax.swing.JButton();
        bill_netAmount = new javax.swing.JLabel();
        bill_productcategory_combo = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        jlable1 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        bill_price_per_dicountprice = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        bill_price_per_total = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        bill_brand = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        bill_Model = new javax.swing.JTextField();
        bill_printbill_btn = new javax.swing.JButton();
        jLabel64 = new javax.swing.JLabel();
        bill_price_per_pendingamt = new javax.swing.JTextField();
        bill_dummybill = new javax.swing.JCheckBox();
        jLabel69 = new javax.swing.JLabel();
        bill_incomming = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        Profit = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        profit_month = new javax.swing.JComboBox<>();
        jLabel85 = new javax.swing.JLabel();
        profit_year = new javax.swing.JComboBox<>();
        profit_calculate = new javax.swing.JButton();
        jLabel86 = new javax.swing.JLabel();
        profit_value = new javax.swing.JLabel();
        client = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        client_view_searchcontent = new javax.swing.JTextField();
        client_view_searchtype = new javax.swing.JComboBox<>();
        client_view_searchbtn = new javax.swing.JButton();
        client_view_viewall = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        client_view_table = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        client_edit_id = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        client_edit_name = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        client_edit_phone = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        client_edit_address = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        client_edit_number = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        client_edit_totl = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        client_edit_gst = new javax.swing.JTextField();
        jLabel78 = new javax.swing.JLabel();
        client_edit_pendingpayment = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        client_edit_profit = new javax.swing.JTextField();
        client_edit_searchbtn = new javax.swing.JButton();
        client_edit_edit = new javax.swing.JButton();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        client_edit_delete = new javax.swing.JButton();
        barcode = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        barcode_name = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        barcode_content = new javax.swing.JTextField();
        barcode_createbtn = new javax.swing.JButton();
        jLabel68 = new javax.swing.JLabel();
        barcode_preview = new javax.swing.JLabel();
        searchStock = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        seachstock_searchtool_panel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        searchstock_searchfield = new javax.swing.JTextField();
        searchstock_combo = new javax.swing.JComboBox<>();
        searchstock_searchbtn = new javax.swing.JButton();
        searchstock_viewallbtn = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        searchstock_mobile_tab = new javax.swing.JPanel();
        srachstock_mobile_jtable = new javax.swing.JScrollPane();
        searchstock_mobile_table = new javax.swing.JTable();
        searchstock_phone_item_count = new javax.swing.JLabel();
        searchstock_accessories_tab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchstock_accessories_table = new javax.swing.JTable();
        searchstock_access_item_count = new javax.swing.JLabel();
        settings = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        settings_profile_tab = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        settings_profile_tab_name = new javax.swing.JTextField();
        settings_profile_tab_username = new javax.swing.JTextField();
        settings_profile_tab_password = new javax.swing.JTextField();
        settings_profile_tab_confirmpassword = new javax.swing.JTextField();
        settings_profile_tab_savebtn = new javax.swing.JButton();
        settings_gmail_tab = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        settings_gmail_tab_email = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        settings_gmail_tab_password = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        settings_gmail_tab_savebtn = new javax.swing.JButton();
        settings_backup_tab = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        Gmail = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        gmail_to = new javax.swing.JTextField();
        gmail_subject = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        gmail_message = new javax.swing.JTextArea();
        jLabel44 = new javax.swing.JLabel();
        gmail_filechoose_btn = new javax.swing.JButton();
        gmail_selected_file = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        gmail_from = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        gmail_application_password = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        gmail_send_mail_btn = new javax.swing.JButton();
        stock = new javax.swing.JPanel();
        Stock = new javax.swing.JTabbedPane();
        phoneTabPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        stock_mobiletab_imei = new javax.swing.JTextField();
        stock_mobiletab_brand = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        stock_mobiletab_modelno = new javax.swing.JTextField();
        stock_mobiletab_qty = new javax.swing.JTextField();
        stock_mobiletab_incommingprice = new javax.swing.JTextField();
        stock_mobiletab_sellingprice = new javax.swing.JTextField();
        stock_mobiletab_addbtn = new javax.swing.JButton();
        stock_mobiletab_update = new javax.swing.JButton();
        stock_mobiletab_deletebtn = new javax.swing.JButton();
        stock_mobiletab_resetbtn = new javax.swing.JButton();
        stock_phone_gstcheckbox = new javax.swing.JCheckBox();
        stock_phone_gst = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        accessoriesTabPanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        stock_accessories_productid = new javax.swing.JTextField();
        stock_accessories_brand = new javax.swing.JTextField();
        stock_accessories_modelno = new javax.swing.JTextField();
        stock_accessories_qty = new javax.swing.JTextField();
        stock_accessories_incommingprice = new javax.swing.JTextField();
        stock_accessories_sellingprice = new javax.swing.JTextField();
        stock_accessories_producttype = new javax.swing.JComboBox<>();
        stock_accessories_addbtn = new javax.swing.JButton();
        stock_accessories_searchbtn = new javax.swing.JButton();
        stock_accessories_deletebtn = new javax.swing.JButton();
        stock_accessories_resetbtn = new javax.swing.JButton();
        stock_accessories_gst = new javax.swing.JTextField();
        stock_accessories_gstcheckbox1 = new javax.swing.JCheckBox();
        jLabel62 = new javax.swing.JLabel();
        loginPanel = new javax.swing.JPanel();
        login_username = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        login_btn = new javax.swing.JButton();
        login_password = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        welcomePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        signupPanel = new javax.swing.JPanel();
        create_account_username = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        create_account_password = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        create_account_name = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stock Manager");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        landingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menu.setBackground(new java.awt.Color(51, 51, 51));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/menu-button.png"))); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/logout.png"))); // NOI18N
        jLabel13.setToolTipText("Logout");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel13MouseReleased(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/stock.png"))); // NOI18N
        jLabel14.setToolTipText("Stock");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel14MouseReleased(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/searchstock.png"))); // NOI18N
        jLabel15.setToolTipText("Search Stock");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel15MouseReleased(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/bill.png"))); // NOI18N
        jLabel16.setToolTipText("Invoice");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel16MouseReleased(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/settings.png"))); // NOI18N
        jLabel17.setToolTipText("Settings");
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel17MouseReleased(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/gmail.png"))); // NOI18N
        jLabel18.setToolTipText("Gmail Invoice");
        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel18MouseReleased(evt);
            }
        });

        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/barcode.png"))); // NOI18N
        jLabel63.setToolTipText("Generate Barcode");
        jLabel63.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel63MouseReleased(evt);
            }
        });

        jLabel65.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/user_1.png"))); // NOI18N
        jLabel65.setToolTipText("Client");
        jLabel65.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel65.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel65MouseReleased(evt);
            }
        });

        jLabel82.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/profits.png"))); // NOI18N
        jLabel82.setToolTipText("Profit");
        jLabel82.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel82.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel82MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu);
        menu.setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel82)
                    .addComponent(jLabel65)
                    .addComponent(jLabel63)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel12)
                .addGap(52, 52, 52)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jLabel63)
                .addGap(18, 18, 18)
                .addComponent(jLabel65)
                .addGap(18, 18, 18)
                .addComponent(jLabel82)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(35, 35, 35))
        );

        landingPanel.add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 520));

        Header.setBackground(new java.awt.Color(255, 255, 255));

        Heading.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        Heading.setText("Stock");
        Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(499, Short.MAX_VALUE))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        landingPanel.add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 0, 850, 60));

        content.setBackground(new java.awt.Color(248, 248, 248));
        content.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bill.setBackground(new java.awt.Color(248, 248, 248));
        bill.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel32.setText("Invoice Number");
        bill.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));
        bill.add(bill_invoiceno, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 144, -1));

        jLabel33.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel33.setText("Product Category");
        bill.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel34.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel34.setText("Product ID/IMEI");
        bill.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel35.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel35.setText("Quantity");
        bill.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel36.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel36.setText("Price per unit");
        bill.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));
        bill.add(bill_pid, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 144, -1));

        bill_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bill_qtyKeyReleased(evt);
            }
        });
        bill.add(bill_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 144, -1));

        bill_price_per_unit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bill_price_per_unitKeyReleased(evt);
            }
        });
        bill.add(bill_price_per_unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 144, -1));

        jPanel1.setBackground(new java.awt.Color(248, 248, 248));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)), " Client Details ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 12))); // NOI18N

        jLabel37.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel37.setText("Name");

        jLabel38.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel38.setText("Phone");

        jLabel39.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel39.setText("Address");

        bill_clientaddress.setColumns(20);
        bill_clientaddress.setRows(5);
        jScrollPane1.setViewportView(bill_clientaddress);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addGap(27, 27, 27)
                        .addComponent(bill_clientname, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel39))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(bill_clientphone, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(bill_clientname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(bill_clientphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                .addContainerGap())
        );

        bill.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, -1, -1));

        bill_include_checkbox.setBackground(new java.awt.Color(248, 248, 248));
        bill_include_checkbox.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bill_include_checkbox.setText("Include GST");
        bill_include_checkbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bill_include_checkboxStateChanged(evt);
            }
        });
        bill.add(bill_include_checkbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 106, -1));

        bill_gstrate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        bill_gstrate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bill_gstrateKeyReleased(evt);
            }
        });
        bill.add(bill_gstrate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 105, -1));

        bill_checkinstock_btn.setBackground(new java.awt.Color(51, 51, 51));
        bill_checkinstock_btn.setForeground(new java.awt.Color(255, 255, 255));
        bill_checkinstock_btn.setText("Check in stock");
        bill_checkinstock_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_checkinstock_btnActionPerformed(evt);
            }
        });
        bill.add(bill_checkinstock_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        bill_addproduct_btn.setBackground(new java.awt.Color(51, 51, 51));
        bill_addproduct_btn.setForeground(new java.awt.Color(255, 255, 255));
        bill_addproduct_btn.setText("Add");
        bill_addproduct_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_addproduct_btnActionPerformed(evt);
            }
        });
        bill.add(bill_addproduct_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 95, -1));

        bill_generatebill_btn.setBackground(new java.awt.Color(51, 51, 51));
        bill_generatebill_btn.setForeground(new java.awt.Color(255, 255, 255));
        bill_generatebill_btn.setText("Generate Bill");
        bill_generatebill_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_generatebill_btnActionPerformed(evt);
            }
        });
        bill.add(bill_generatebill_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, -1, -1));

        bill_resetbill_btn.setBackground(new java.awt.Color(51, 51, 51));
        bill_resetbill_btn.setForeground(new java.awt.Color(255, 255, 255));
        bill_resetbill_btn.setText("Reset Bill");
        bill_resetbill_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_resetbill_btnActionPerformed(evt);
            }
        });
        bill.add(bill_resetbill_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 370, -1, -1));

        bill_netAmount.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bill_netAmount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bill_netAmount.setText("0.00");
        bill.add(bill_netAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, 151, 40));

        bill_productcategory_combo.setEditable(true);
        bill_productcategory_combo.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bill_productcategory_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mobile", "Earphone", "Headphone", "Mobile Case", "Tampered Glass", "Screen Guard", "Power Bank", "Charger", "Data Cable", "Mobile Attachment" }));
        bill.add(bill_productcategory_combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 144, -1));

        jLabel41.setText("%");
        bill.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 36, -1));

        jlable1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jlable1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlable1.setText("TOTAL = Rs.");
        bill.add(jlable1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 487, 40));

        jLabel57.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel57.setText("Discount Price");
        bill.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));

        bill_price_per_dicountprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bill_price_per_dicountpriceKeyReleased(evt);
            }
        });
        bill.add(bill_price_per_dicountprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 144, -1));

        jLabel58.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel58.setText("Total");
        bill.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));
        bill.add(bill_price_per_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, 144, -1));

        jLabel59.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel59.setText("Product Brand");
        bill.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        bill_brand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bill_brandKeyReleased(evt);
            }
        });
        bill.add(bill_brand, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 144, -1));

        jLabel60.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel60.setText("Product Model");
        bill.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        bill_Model.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bill_ModelKeyReleased(evt);
            }
        });
        bill.add(bill_Model, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 144, -1));

        bill_printbill_btn.setBackground(new java.awt.Color(51, 51, 51));
        bill_printbill_btn.setForeground(new java.awt.Color(255, 255, 255));
        bill_printbill_btn.setText("Print Bill");
        bill_printbill_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_printbill_btnActionPerformed(evt);
            }
        });
        bill.add(bill_printbill_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 370, 90, -1));

        jLabel64.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel64.setText("Pending Amount");
        bill.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, -1, -1));

        bill_price_per_pendingamt.setText("0.00");
        bill_price_per_pendingamt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_price_per_pendingamtActionPerformed(evt);
            }
        });
        bill.add(bill_price_per_pendingamt, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 144, -1));

        bill_dummybill.setBackground(new java.awt.Color(248, 248, 248));
        bill_dummybill.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        bill_dummybill.setText("Create dummy bill");
        bill_dummybill.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bill_dummybillStateChanged(evt);
            }
        });
        bill.add(bill_dummybill, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, 240, -1));

        jLabel69.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel69.setText("Incomming Amonut");
        bill.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, -1, -1));

        bill_incomming.setText("0.00");
        bill_incomming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_incommingActionPerformed(evt);
            }
        });
        bill.add(bill_incomming, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 144, -1));

        jLabel83.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(153, 153, 153));
        jLabel83.setText("Check if you want to add gst, if not checked it will just refelect in invoice");
        bill.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 370, -1));

        content.add(bill, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        jLabel84.setText("Select Month");

        jLabel85.setText("Select Year");

        profit_calculate.setBackground(new java.awt.Color(51, 51, 51));
        profit_calculate.setForeground(new java.awt.Color(255, 255, 255));
        profit_calculate.setText("Calculate");
        profit_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profit_calculateActionPerformed(evt);
            }
        });

        jLabel86.setText("Profit");

        javax.swing.GroupLayout ProfitLayout = new javax.swing.GroupLayout(Profit);
        Profit.setLayout(ProfitLayout);
        ProfitLayout.setHorizontalGroup(
            ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfitLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel86, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel85)
                    .addComponent(jLabel84, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addGroup(ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(profit_month, 0, 147, Short.MAX_VALUE)
                    .addComponent(profit_year, 0, 147, Short.MAX_VALUE)
                    .addComponent(profit_calculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profit_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(504, Short.MAX_VALUE))
        );
        ProfitLayout.setVerticalGroup(
            ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfitLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(profit_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel85)
                    .addComponent(profit_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(profit_calculate)
                .addGap(47, 47, 47)
                .addGroup(ProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel86)
                    .addComponent(profit_value, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        content.add(Profit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        jLabel70.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/search.png"))); // NOI18N

        client_view_searchtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CNAME", "CPHONE", "INVOICENO", "LASTUPDATE", " " }));

        client_view_searchbtn.setBackground(new java.awt.Color(51, 51, 51));
        client_view_searchbtn.setForeground(new java.awt.Color(255, 255, 255));
        client_view_searchbtn.setText("Search");
        client_view_searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_view_searchbtnActionPerformed(evt);
            }
        });

        client_view_viewall.setBackground(new java.awt.Color(51, 51, 51));
        client_view_viewall.setForeground(new java.awt.Color(255, 255, 255));
        client_view_viewall.setText("View All");
        client_view_viewall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_view_viewallActionPerformed(evt);
            }
        });

        client_view_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Client Name", "Client Phone", "Client Address", "Invoice No", "Total", "GST %", "Pending Amt", "Profit/Loss", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(client_view_table);
        if (client_view_table.getColumnModel().getColumnCount() > 0) {
            client_view_table.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addGap(18, 18, 18)
                        .addComponent(client_view_searchcontent, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(client_view_searchtype, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(client_view_searchbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                        .addComponent(client_view_viewall)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(client_view_searchcontent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(client_view_searchtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(client_view_searchbtn)
                        .addComponent(client_view_viewall))
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("View", jPanel7);

        jLabel71.setText("ID");

        client_edit_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_edit_idActionPerformed(evt);
            }
        });

        jLabel72.setText("Client Name");

        jLabel73.setText("Client Phone");

        client_edit_phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_edit_phoneActionPerformed(evt);
            }
        });

        jLabel74.setText("Client Address");

        jLabel75.setText("Invoice Number");

        jLabel76.setText("Total");

        client_edit_totl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_edit_totlActionPerformed(evt);
            }
        });
        client_edit_totl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                client_edit_totlKeyReleased(evt);
            }
        });

        jLabel77.setText("GST rate");

        jLabel78.setText("Pending Payment Amount");

        jLabel79.setText("Profit/Loss ");

        client_edit_searchbtn.setBackground(new java.awt.Color(51, 51, 51));
        client_edit_searchbtn.setForeground(new java.awt.Color(255, 255, 255));
        client_edit_searchbtn.setText("Search");
        client_edit_searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_edit_searchbtnActionPerformed(evt);
            }
        });

        client_edit_edit.setBackground(new java.awt.Color(51, 51, 51));
        client_edit_edit.setForeground(new java.awt.Color(255, 255, 255));
        client_edit_edit.setText("Update");
        client_edit_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_edit_editActionPerformed(evt);
            }
        });

        jLabel80.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(153, 153, 153));
        jLabel80.setText("Enter SL from View tab here and search");

        jLabel81.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(153, 153, 153));
        jLabel81.setText("Positive value means profit, Negative value means loss");

        client_edit_delete.setBackground(new java.awt.Color(255, 255, 255));
        client_edit_delete.setForeground(new java.awt.Color(51, 51, 51));
        client_edit_delete.setText("Delete");
        client_edit_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                client_edit_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel75)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel72)
                                .addGap(105, 105, 105)
                                .addComponent(client_edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel71)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(client_edit_id, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel79)
                            .addComponent(jLabel78)
                            .addComponent(jLabel77))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(client_edit_gst, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_edit_pendingpayment, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_edit_profit, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(client_edit_searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(client_edit_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_edit_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel74)
                            .addComponent(jLabel76)
                            .addComponent(jLabel73))
                        .addGap(93, 93, 93)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(client_edit_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_edit_number, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_edit_totl, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(client_edit_address, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(client_edit_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel80))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(client_edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(client_edit_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(client_edit_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(client_edit_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(client_edit_totl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(client_edit_gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(client_edit_pendingpayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(client_edit_profit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel81))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(client_edit_searchbtn)
                    .addComponent(client_edit_edit)
                    .addComponent(client_edit_delete))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Edit", jPanel6);

        javax.swing.GroupLayout clientLayout = new javax.swing.GroupLayout(client);
        client.setLayout(clientLayout);
        clientLayout.setHorizontalGroup(
            clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        clientLayout.setVerticalGroup(
            clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane3.getAccessibleContext().setAccessibleName("View");

        content.add(client, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        barcode.setBackground(new java.awt.Color(248, 248, 248));

        jLabel66.setText("Name");

        jLabel67.setText("Content");

        barcode_createbtn.setBackground(new java.awt.Color(51, 51, 51));
        barcode_createbtn.setForeground(new java.awt.Color(255, 255, 255));
        barcode_createbtn.setText("Generete Barcode");
        barcode_createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcode_createbtnActionPerformed(evt);
            }
        });

        jLabel68.setBackground(new java.awt.Color(248, 248, 248));
        jLabel68.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(153, 153, 153));
        jLabel68.setText("Enter content that you want to encrypt, eg. - IMEI no or product id");

        javax.swing.GroupLayout barcodeLayout = new javax.swing.GroupLayout(barcode);
        barcode.setLayout(barcodeLayout);
        barcodeLayout.setHorizontalGroup(
            barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barcodeLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(jLabel67))
                .addGap(42, 42, 42)
                .addGroup(barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(barcodeLayout.createSequentialGroup()
                        .addGroup(barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(barcode_createbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(barcode_content, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(barcode_name, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barcode_preview, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        barcodeLayout.setVerticalGroup(
            barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barcodeLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(barcode_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(barcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(barcode_content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68))
                .addGap(26, 26, 26)
                .addComponent(barcode_createbtn)
                .addGap(86, 86, 86)
                .addComponent(barcode_preview, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        content.add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 830, 450));

        searchStock.setBackground(new java.awt.Color(248, 248, 248));

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/search.png"))); // NOI18N

        searchstock_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IMEI", "BRAND", "MODEL" }));

        searchstock_searchbtn.setBackground(new java.awt.Color(51, 51, 51));
        searchstock_searchbtn.setForeground(new java.awt.Color(255, 255, 255));
        searchstock_searchbtn.setText("Search");
        searchstock_searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchstock_searchbtnActionPerformed(evt);
            }
        });

        searchstock_viewallbtn.setBackground(new java.awt.Color(51, 51, 51));
        searchstock_viewallbtn.setForeground(new java.awt.Color(255, 255, 255));
        searchstock_viewallbtn.setText("View All");
        searchstock_viewallbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchstock_viewallbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout seachstock_searchtool_panelLayout = new javax.swing.GroupLayout(seachstock_searchtool_panel);
        seachstock_searchtool_panel.setLayout(seachstock_searchtool_panelLayout);
        seachstock_searchtool_panelLayout.setHorizontalGroup(
            seachstock_searchtool_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seachstock_searchtool_panelLayout.createSequentialGroup()
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(searchstock_searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchstock_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchstock_searchbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchstock_viewallbtn)
                .addContainerGap())
        );
        seachstock_searchtool_panelLayout.setVerticalGroup(
            seachstock_searchtool_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seachstock_searchtool_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seachstock_searchtool_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(seachstock_searchtool_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchstock_searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchstock_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchstock_searchbtn)
                        .addComponent(searchstock_viewallbtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        searchstock_mobile_tab.setBackground(new java.awt.Color(255, 255, 255));

        searchstock_mobile_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IMEI", "BRAND", "MODEL", "QUANTITY", "INCOMMING", "SELLING"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        srachstock_mobile_jtable.setViewportView(searchstock_mobile_table);

        searchstock_phone_item_count.setText("0");

        javax.swing.GroupLayout searchstock_mobile_tabLayout = new javax.swing.GroupLayout(searchstock_mobile_tab);
        searchstock_mobile_tab.setLayout(searchstock_mobile_tabLayout);
        searchstock_mobile_tabLayout.setHorizontalGroup(
            searchstock_mobile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchstock_mobile_tabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchstock_mobile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(srachstock_mobile_jtable, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
                    .addGroup(searchstock_mobile_tabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchstock_phone_item_count, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        searchstock_mobile_tabLayout.setVerticalGroup(
            searchstock_mobile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchstock_mobile_tabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(srachstock_mobile_jtable, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchstock_phone_item_count)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mobile Phones", searchstock_mobile_tab);

        searchstock_accessories_tab.setBackground(new java.awt.Color(255, 255, 255));

        searchstock_accessories_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "BRAND", "MODEL", "QUANTITY", "TYPE", "INCOMMING", "SELLING"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(searchstock_accessories_table);

        searchstock_access_item_count.setText("0");
        searchstock_access_item_count.setToolTipText("");

        javax.swing.GroupLayout searchstock_accessories_tabLayout = new javax.swing.GroupLayout(searchstock_accessories_tab);
        searchstock_accessories_tab.setLayout(searchstock_accessories_tabLayout);
        searchstock_accessories_tabLayout.setHorizontalGroup(
            searchstock_accessories_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchstock_accessories_tabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchstock_accessories_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchstock_accessories_tabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchstock_access_item_count, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        searchstock_accessories_tabLayout.setVerticalGroup(
            searchstock_accessories_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchstock_accessories_tabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchstock_access_item_count)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Accessories", searchstock_accessories_tab);

        javax.swing.GroupLayout searchStockLayout = new javax.swing.GroupLayout(searchStock);
        searchStock.setLayout(searchStockLayout);
        searchStockLayout.setHorizontalGroup(
            searchStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(searchStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(seachstock_searchtool_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        searchStockLayout.setVerticalGroup(
            searchStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchStockLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(seachstock_searchtool_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Acc");

        content.add(searchStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        settings.setBackground(new java.awt.Color(248, 248, 248));
        settings.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));

        settings_profile_tab.setBackground(new java.awt.Color(255, 255, 255));

        jLabel45.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel45.setText("Name");

        jLabel48.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel48.setText("Username");

        jLabel49.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel49.setText("Password");

        jLabel50.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel50.setText("Confirm Password");

        settings_profile_tab_savebtn.setBackground(new java.awt.Color(51, 51, 51));
        settings_profile_tab_savebtn.setForeground(new java.awt.Color(255, 255, 255));
        settings_profile_tab_savebtn.setText("Save");
        settings_profile_tab_savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_profile_tab_savebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settings_profile_tabLayout = new javax.swing.GroupLayout(settings_profile_tab);
        settings_profile_tab.setLayout(settings_profile_tabLayout);
        settings_profile_tabLayout.setHorizontalGroup(
            settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_profile_tabLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50))
                .addGap(27, 27, 27)
                .addGroup(settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settings_profile_tab_savebtn)
                    .addComponent(settings_profile_tab_confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_profile_tab_password, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_profile_tab_username, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_profile_tab_name, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        settings_profile_tabLayout.setVerticalGroup(
            settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_profile_tabLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(settings_profile_tab_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(settings_profile_tab_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(settings_profile_tab_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(settings_profile_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(settings_profile_tab_confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(settings_profile_tab_savebtn)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("My Profile", settings_profile_tab);

        settings_gmail_tab.setBackground(new java.awt.Color(255, 255, 255));
        settings_gmail_tab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel51.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel51.setText("Email ID");
        settings_gmail_tab.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 46, -1, -1));
        settings_gmail_tab.add(settings_gmail_tab_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 44, 170, -1));

        jLabel52.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel52.setText("Application Password");
        settings_gmail_tab.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 83, -1, -1));
        settings_gmail_tab.add(settings_gmail_tab_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 81, 170, -1));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)), "What is Application password?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("Steps to generate GMail App Password.\n\n1. Visit https://myaccount.google.com/apppasswords.\n    You may be asked to sign in to Google. Sign in with\n    the email you provide in From field above.\n\n2. The next page will ask you t select the app and \n    device you want to generate the app password\n    Select app : Mail\n    Select device : Windows Computer\n\n3. Click on Generate button. The geneated password\n    will be of 16 charaters. Note the password as it\n    does not appears again.\n\n4. Enter the password in the above Application \n    Password field.");
        jTextArea3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane5.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        settings_gmail_tab.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 378, -1));

        settings_gmail_tab_savebtn.setBackground(new java.awt.Color(51, 51, 51));
        settings_gmail_tab_savebtn.setForeground(new java.awt.Color(255, 255, 255));
        settings_gmail_tab_savebtn.setText("Save");
        settings_gmail_tab_savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_gmail_tab_savebtnActionPerformed(evt);
            }
        });
        settings_gmail_tab.add(settings_gmail_tab_savebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, -1));

        jTabbedPane2.addTab("GMail ", settings_gmail_tab);

        settings_backup_tab.setBackground(new java.awt.Color(255, 255, 255));
        settings_backup_tab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel53.setFont(new java.awt.Font("Serif", 2, 12)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(153, 153, 153));
        jLabel53.setText("Back of all Mobile phone stocks will in CSV file.");
        settings_backup_tab.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel54.setFont(new java.awt.Font("Serif", 2, 12)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(153, 153, 153));
        jLabel54.setText("You can open the file with MS Excel");
        settings_backup_tab.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setPreferredSize(new java.awt.Dimension(1, 340));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        settings_backup_tab.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, 280));

        jLabel55.setFont(new java.awt.Font("Serif", 2, 12)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(153, 153, 153));
        jLabel55.setText("Back of all accessories stocks will in CSV file.");
        settings_backup_tab.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, -1, -1));

        jLabel56.setFont(new java.awt.Font("Serif", 2, 12)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(153, 153, 153));
        jLabel56.setText("You can open the file with MS Excel");
        settings_backup_tab.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, -1, -1));

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Backup Mobile Stock");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        settings_backup_tab.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 280, -1));

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Backup Accessories Stock");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        settings_backup_tab.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 280, -1));

        jTabbedPane2.addTab("Backup", settings_backup_tab);

        settings.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 800, 430));
        jTabbedPane2.getAccessibleContext().setAccessibleName("");

        content.add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 460));

        Gmail.setBackground(new java.awt.Color(248, 248, 248));
        Gmail.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel40.setText("To");
        Gmail.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 33, -1, -1));

        jLabel42.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel42.setText("Subject");
        Gmail.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 70, -1, -1));

        jLabel43.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel43.setText("Message");
        Gmail.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 105, -1, -1));
        Gmail.add(gmail_to, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 31, 243, -1));
        Gmail.add(gmail_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 68, 243, -1));

        gmail_message.setColumns(20);
        gmail_message.setRows(5);
        jScrollPane3.setViewportView(gmail_message);

        Gmail.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 105, 243, 94));

        jLabel44.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel44.setText("Attach Bill");
        Gmail.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 217, -1, -1));

        gmail_filechoose_btn.setBackground(new java.awt.Color(51, 51, 51));
        gmail_filechoose_btn.setForeground(new java.awt.Color(255, 255, 255));
        gmail_filechoose_btn.setText("Choose Bill");
        gmail_filechoose_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmail_filechoose_btnActionPerformed(evt);
            }
        });
        Gmail.add(gmail_filechoose_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 212, -1, -1));

        gmail_selected_file.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        gmail_selected_file.setForeground(new java.awt.Color(153, 153, 153));
        gmail_selected_file.setText("File name");
        Gmail.add(gmail_selected_file, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 255, 241, -1));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setPreferredSize(new java.awt.Dimension(1, 399));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );

        Gmail.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 31, -1, -1));

        jLabel46.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel46.setText("From");
        Gmail.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 35, -1, -1));
        Gmail.add(gmail_from, new org.netbeans.lib.awtextra.AbsoluteConstraints(574, 31, 228, -1));

        jLabel47.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel47.setText("Application Password");
        Gmail.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 70, -1, -1));
        Gmail.add(gmail_application_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 68, 227, -1));

        jPanel3.setBackground(new java.awt.Color(248, 248, 248));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)), "What is Application password?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(248, 248, 248));
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Steps to generate GMail App Password.\n\n1. Visit https://myaccount.google.com/apppasswords.\n    You may be asked to sign in to Google. Sign in with\n    the email you provide in From field above.\n\n2. The next page will ask you t select the app and \n    device you want to generate the app password\n    Select app : Mail\n    Select device : Windows Computer\n\n3. Click on Generate button. The geneated password\n    will be of 16 charaters. Note the password as it\n    does not appears again.\n\n4. Enter the password in the above Application \n    Password field.");
        jTextArea2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane4.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        Gmail.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 105, 378, -1));

        gmail_send_mail_btn.setBackground(new java.awt.Color(51, 51, 51));
        gmail_send_mail_btn.setForeground(new java.awt.Color(255, 255, 255));
        gmail_send_mail_btn.setText("Send Mail");
        gmail_send_mail_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmail_send_mail_btnActionPerformed(evt);
            }
        });
        Gmail.add(gmail_send_mail_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 394, 106, -1));

        content.add(Gmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        stock.setBackground(new java.awt.Color(248, 248, 248));

        Stock.setBackground(new java.awt.Color(255, 255, 255));

        phoneTabPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel11.setText("IMEI");

        jLabel19.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel19.setText("Brand");

        jLabel20.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel20.setText("Model Number");

        jLabel21.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel21.setText("Quantity in stock");

        stock_mobiletab_brand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_mobiletab_brandActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel22.setText("Incomming price");

        jLabel23.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel23.setText("Selling price");

        stock_mobiletab_sellingprice.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                stock_mobiletab_sellingpriceInputMethodTextChanged(evt);
            }
        });
        stock_mobiletab_sellingprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stock_mobiletab_sellingpriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stock_mobiletab_sellingpriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stock_mobiletab_sellingpriceKeyTyped(evt);
            }
        });
        stock_mobiletab_sellingprice.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                stock_mobiletab_sellingpriceVetoableChange(evt);
            }
        });

        stock_mobiletab_addbtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_mobiletab_addbtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_mobiletab_addbtn.setText("ADD");
        stock_mobiletab_addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_mobiletab_addbtnActionPerformed(evt);
            }
        });

        stock_mobiletab_update.setBackground(new java.awt.Color(51, 51, 51));
        stock_mobiletab_update.setForeground(new java.awt.Color(255, 255, 255));
        stock_mobiletab_update.setText("SEARCH");
        stock_mobiletab_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_mobiletab_updateActionPerformed(evt);
            }
        });

        stock_mobiletab_deletebtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_mobiletab_deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_mobiletab_deletebtn.setText("DELETE");
        stock_mobiletab_deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_mobiletab_deletebtnActionPerformed(evt);
            }
        });

        stock_mobiletab_resetbtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_mobiletab_resetbtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_mobiletab_resetbtn.setText("RESET");
        stock_mobiletab_resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_mobiletab_resetbtnActionPerformed(evt);
            }
        });

        stock_phone_gstcheckbox.setBackground(new java.awt.Color(255, 255, 255));
        stock_phone_gstcheckbox.setText("Add GST");
        stock_phone_gstcheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stock_phone_gstcheckboxStateChanged(evt);
            }
        });

        stock_phone_gst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stock_phone_gstKeyReleased(evt);
            }
        });

        jLabel61.setText("%");

        javax.swing.GroupLayout phoneTabPanelLayout = new javax.swing.GroupLayout(phoneTabPanel);
        phoneTabPanel.setLayout(phoneTabPanelLayout);
        phoneTabPanelLayout.setHorizontalGroup(
            phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phoneTabPanelLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(stock_phone_gstcheckbox))
                .addGap(32, 32, 32)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(phoneTabPanelLayout.createSequentialGroup()
                        .addComponent(stock_mobiletab_deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stock_mobiletab_resetbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(phoneTabPanelLayout.createSequentialGroup()
                        .addComponent(stock_mobiletab_addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stock_mobiletab_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(stock_mobiletab_incommingprice, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stock_mobiletab_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stock_mobiletab_modelno, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stock_mobiletab_brand, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stock_mobiletab_imei, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(phoneTabPanelLayout.createSequentialGroup()
                        .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(stock_mobiletab_sellingprice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(stock_phone_gst, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61)))
                .addContainerGap(302, Short.MAX_VALUE))
        );
        phoneTabPanelLayout.setVerticalGroup(
            phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phoneTabPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(stock_mobiletab_imei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(stock_mobiletab_brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(stock_mobiletab_modelno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(stock_mobiletab_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(stock_mobiletab_incommingprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(stock_mobiletab_sellingprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_phone_gstcheckbox)
                    .addComponent(stock_phone_gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_mobiletab_addbtn)
                    .addComponent(stock_mobiletab_update))
                .addGap(18, 18, 18)
                .addGroup(phoneTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_mobiletab_deletebtn)
                    .addComponent(stock_mobiletab_resetbtn))
                .addGap(40, 40, 40))
        );

        Stock.addTab("Mobile Phones", phoneTabPanel);

        accessoriesTabPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel24.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel24.setText("Product ID");

        jLabel25.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel25.setText("Brand");

        jLabel26.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel26.setText("Model Number");

        jLabel27.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel27.setText("Quantity in stock");

        jLabel28.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel28.setText("Product type");

        jLabel29.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel29.setText("Incomming price");

        jLabel30.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel30.setText("Selling price");

        stock_accessories_producttype.setEditable(true);
        stock_accessories_producttype.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        stock_accessories_producttype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- select or type --", "Earphone", "Headphone", "Mobile Case", "Tampered Glass", "Screen Guard", "Power Bank", "Charger", "Data Cable", "Mobile Attachment", "Mobile" }));

        stock_accessories_addbtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_accessories_addbtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_accessories_addbtn.setText("ADD");
        stock_accessories_addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_accessories_addbtnActionPerformed(evt);
            }
        });

        stock_accessories_searchbtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_accessories_searchbtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_accessories_searchbtn.setText("SEARCH");
        stock_accessories_searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_accessories_searchbtnActionPerformed(evt);
            }
        });

        stock_accessories_deletebtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_accessories_deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_accessories_deletebtn.setText("DELETE");
        stock_accessories_deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_accessories_deletebtnActionPerformed(evt);
            }
        });

        stock_accessories_resetbtn.setBackground(new java.awt.Color(51, 51, 51));
        stock_accessories_resetbtn.setForeground(new java.awt.Color(255, 255, 255));
        stock_accessories_resetbtn.setText("RESET");
        stock_accessories_resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_accessories_resetbtnActionPerformed(evt);
            }
        });

        stock_accessories_gstcheckbox1.setBackground(new java.awt.Color(255, 255, 255));
        stock_accessories_gstcheckbox1.setText("Add GST");

        jLabel62.setText("%");

        javax.swing.GroupLayout accessoriesTabPanelLayout = new javax.swing.GroupLayout(accessoriesTabPanel);
        accessoriesTabPanel.setLayout(accessoriesTabPanelLayout);
        accessoriesTabPanelLayout.setHorizontalGroup(
            accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(jLabel28))
                        .addGap(33, 33, 33)
                        .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                                .addComponent(stock_accessories_deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(stock_accessories_resetbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                                .addComponent(stock_accessories_addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(stock_accessories_searchbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(stock_accessories_incommingprice, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(stock_accessories_qty, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(stock_accessories_modelno, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(stock_accessories_brand, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(stock_accessories_productid)
                            .addComponent(stock_accessories_producttype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                                .addComponent(stock_accessories_sellingprice)
                                .addGap(135, 135, 135))))
                    .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(stock_accessories_gstcheckbox1)
                        .addGap(32, 32, 32)
                        .addComponent(stock_accessories_gst, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel62)))
                .addContainerGap(364, Short.MAX_VALUE))
        );
        accessoriesTabPanelLayout.setVerticalGroup(
            accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessoriesTabPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(stock_accessories_productid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(stock_accessories_brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(stock_accessories_modelno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(stock_accessories_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(stock_accessories_producttype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(stock_accessories_incommingprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(stock_accessories_sellingprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_accessories_gstcheckbox1)
                    .addComponent(stock_accessories_gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_accessories_addbtn)
                    .addComponent(stock_accessories_searchbtn))
                .addGap(18, 18, 18)
                .addGroup(accessoriesTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_accessories_deletebtn)
                    .addComponent(stock_accessories_resetbtn))
                .addGap(29, 29, 29))
        );

        Stock.addTab("Accessories", accessoriesTabPanel);

        javax.swing.GroupLayout stockLayout = new javax.swing.GroupLayout(stock);
        stock.setLayout(stockLayout);
        stockLayout.setHorizontalGroup(
            stockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        stockLayout.setVerticalGroup(
            stockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Stock)
                .addContainerGap())
        );

        content.add(stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 460));

        landingPanel.add(content, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 830, 460));

        getContentPane().add(landingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 520));

        loginPanel.setBackground(new java.awt.Color(255, 255, 255));

        login_username.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        login_username.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("User name");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setText("Password");

        jLabel9.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        jLabel9.setText("Log In");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        login_btn.setBackground(new java.awt.Color(51, 51, 51));
        login_btn.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        login_btn.setForeground(new java.awt.Color(255, 255, 255));
        login_btn.setText("Log In");
        login_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnActionPerformed(evt);
            }
        });

        login_password.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButton4.setText("New user? Create new account");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(login_password, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(login_username, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(loginPanelLayout.createSequentialGroup()
                            .addComponent(login_btn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(login_username, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(login_password, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login_btn)
                    .addComponent(jButton4))
                .addContainerGap(193, Short.MAX_VALUE))
        );

        getContentPane().add(loginPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 460, 520));

        welcomePanel.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/akash/res/user.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("DejaVu Sans Mono", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage stocks on your finger tips");

        javax.swing.GroupLayout welcomePanelLayout = new javax.swing.GroupLayout(welcomePanel);
        welcomePanel.setLayout(welcomePanelLayout);
        welcomePanelLayout.setHorizontalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
                .addContainerGap())
        );
        welcomePanelLayout.setVerticalGroup(
            welcomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        getContentPane().add(welcomePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 520));

        signupPanel.setBackground(new java.awt.Color(255, 255, 255));

        create_account_username.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        create_account_username.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setText("User name");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        jLabel6.setText("Create Account");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        create_account_password.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));
        create_account_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_account_passwordActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButton2.setText("Already have account? Log In");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel10.setText("Name");

        create_account_name.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        create_account_name.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));

        javax.swing.GroupLayout signupPanelLayout = new javax.swing.GroupLayout(signupPanel);
        signupPanel.setLayout(signupPanelLayout);
        signupPanelLayout.setHorizontalGroup(
            signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signupPanelLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(create_account_name, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(signupPanelLayout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(create_account_username, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, signupPanelLayout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(create_account_password, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67))
        );
        signupPanelLayout.setVerticalGroup(
            signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signupPanelLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(create_account_name, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(create_account_username, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(create_account_password, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(signupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(121, 121, 121))
        );

        getContentPane().add(signupPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 460, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void create_account_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_account_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_create_account_passwordActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        loginPanel.setVisible(true);
        signupPanel.setVisible(false);
        landingPanel.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        loginPanel.setVisible(false);
        signupPanel.setVisible(true);
        landingPanel.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void login_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnActionPerformed
        // TODO add your handling code here:

        String username = login_username.getText().toString();
        String password = login_password.getText().toString();

        if (username.equals("") || password.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            model = new UserHandler().loginUser(username, password);
            System.err.println(model.getUsername());
            System.err.println(model.getPassword());
            if (model.username != null) {

                loginPanel.setVisible(false);
                signupPanel.setVisible(false);
                landingPanel.setVisible(true);

                changeMenu("seachstock");

                settings_profile_tab_name.setText(model.getName());
                settings_profile_tab_username.setText(model.getUsername());
                settings_gmail_tab_email.setText(model.getGmail());
                settings_gmail_tab_password.setText(model.getApppassword());
                gmail_from.setText(model.getGmail());
                gmail_application_password.setText(model.getApppassword());

            } else {
                JOptionPane.showMessageDialog(null, "Wrong username or password.", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_login_btnActionPerformed

    private void stock_mobiletab_brandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_mobiletab_brandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_mobiletab_brandActionPerformed

    private void searchstock_viewallbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchstock_viewallbtnActionPerformed
        // TODO add your handling code here:
        ResultSet phoneRS = new PhoneStockHandler().getAllProduct();
        ResultSet accessoriesRS = new AccessoriesStockHandler().getAllProduct();

        ArrayList<PhoneModel> phonelist = new ArrayList<>();
        ArrayList<AccessoriesModel> accessorieslist = new ArrayList<>();

        DefaultTableModel phonetableModel = (DefaultTableModel) searchstock_mobile_table.getModel();
        for (int i = 0; i < phonetableModel.getRowCount(); i++) {
            phonetableModel.removeRow(i);
        }

        DefaultTableModel accessoriestableModel = (DefaultTableModel) searchstock_accessories_table.getModel();
        for (int i = 0; i < accessoriestableModel.getRowCount(); i++) {
            accessoriestableModel.removeRow(i);
        }

        try {
            if (phoneRS != null && phoneRS.next()) {
                searchstock_mobile_table.setModel(Utilities.resultSetToTableModel(phoneRS));
            } else {
                JOptionPane.showMessageDialog(null, "Failed to fetch Mobile Product", "Alert", JOptionPane.ERROR_MESSAGE);
            }

            if (accessoriesRS != null && accessoriesRS.next()) {
                searchstock_accessories_table.setModel(Utilities.resultSetToTableModel(accessoriesRS));
            } else {
                JOptionPane.showMessageDialog(null, "Failed to fetch Accessories Product", "Alert", JOptionPane.ERROR_MESSAGE);
            }
                    searchstock_phone_item_count.setText(String.valueOf(searchstock_mobile_table.getRowCount())+" items");
                 searchstock_access_item_count.setText(String.valueOf(searchstock_accessories_table.getRowCount())+" items");
        } catch (SQLException ex) {
            ex.printStackTrace();

        } finally {
            try {
                phoneRS.close();
                accessoriesRS.close();
            } catch (SQLException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_searchstock_viewallbtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String dateToday = setdate("dd-MM-yyyy");
        ResultSet phoneRS = new PhoneStockHandler().getAllProduct();
        File f = new File("PHONE_Backup_" + dateToday + ".csv");
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            if (!f.exists()) {
                f.createNewFile();
            }
            fw = new FileWriter(f.getAbsoluteFile());
            bw = new BufferedWriter(fw);
            bw.write("ID,IMEI,BRAND,MODEL,QUANTITY,INCOMMING PRICE,SELLING PRICE,LAST UPDATE\n\n");

            while (phoneRS.next()) {
                bw.write(String.format("%s,%s,%s,%s,%s,%s,%s,%s\n",
                        phoneRS.getInt(1), phoneRS.getString(2), phoneRS.getString(3), phoneRS.getString(4), phoneRS.getInt(5), phoneRS.getString(6), phoneRS.getFloat(7), phoneRS.getString(8)));
            }

            JOptionPane.showMessageDialog(null, "Backup is taken and save with file name PHONE_Backup_" + dateToday + ".csv. \nOpen this file with MS Excel or any Spreadsheet software", "Alert", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed to take backup.\nERROR : " + e.getMessage(), "Alert", JOptionPane.ERROR_MESSAGE);
        } finally {

            try {
                if (bw != null) {
                    bw.close();
                }

                if (fw != null) {
                    fw.close();
                }

            } catch (IOException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton6ActionPerformed

    public String setdate(String format) {
        Date today = new Date();
        SimpleDateFormat parseFormat = new SimpleDateFormat(format);
        String date = parseFormat.format(today);
        return date;
    }

    private void jLabel14MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseReleased
        // TODO add your handling code here:
        if (isAdmin()) {
            changeMenu("stock");
        }
    }//GEN-LAST:event_jLabel14MouseReleased

    private boolean isAdmin() {

        JTextField field1 = new JTextField("");
        JPasswordField field2 = new JPasswordField("");
        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Username"));
        panel.add(field1);
        panel.add(new JLabel("Password"));
        panel.add(field2);
        int result = JOptionPane.showConfirmDialog(null, panel, "Authenticate",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            String username = field1.getText().toString();
            String password = field2.getText().toString();

            if (username.equals("") || password.equals("")) {
                JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);
            } else {
                if (new UserHandler().loginUser(username, password).username != null) {
                    return true;
                } else {
                    return false;
                }

            }
        } else {
            System.out.println("Cancelled");
        }
        return false;
    }

    private void jLabel15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseReleased
        // TODO add your handling code here:
        changeMenu("seachstock");
    }//GEN-LAST:event_jLabel15MouseReleased

    private void jLabel16MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseReleased
        // TODO add your handling code here:
        netAmout = 0.00f;
        netIncomming = 0.00f;       
        bill_netAmount.setText(String.valueOf(netAmout));
        changeMenu("bill");
        bill_invoiceno.setText("INV" + System.currentTimeMillis());
    }//GEN-LAST:event_jLabel16MouseReleased

    private void jLabel18MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseReleased
        // TODO add your handling code here:
        changeMenu("gmail");
    }//GEN-LAST:event_jLabel18MouseReleased

    private void jLabel17MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseReleased
        // TODO add your handling code here:
        if (isAdmin()) {
            changeMenu("settings");
        }
    }//GEN-LAST:event_jLabel17MouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String name = create_account_name.getText().toString();
        String username = create_account_username.getText().toString();
        String password = create_account_password.getText().toString();

        if (name.equals("") || username.equals("") || password.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            if (new UserHandler().createUser(name, username, password) == 1) {
                JOptionPane.showMessageDialog(null, "You are registered successfully", "Alert", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Some error occured during registration. Try after sometime.", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MousePressed

    private void jLabel13MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseReleased
        // TODO add your handling code here:
        landingPanel.setVisible(false);
        welcomePanel.setVisible(true);
        loginPanel.setVisible(true);

        login_username.setText("");
        login_password.setText("");
    }//GEN-LAST:event_jLabel13MouseReleased

    private void stock_mobiletab_addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_mobiletab_addbtnActionPerformed
        // TODO add your handling code here:
        String imei = stock_mobiletab_imei.getText().toString();
        String brand = stock_mobiletab_brand.getText().toString();
        String model = stock_mobiletab_modelno.getText().toString();
        String quantity = stock_mobiletab_qty.getText().toString();
        String incommingPrice = stock_mobiletab_incommingprice.getText().toString();
        float sellingPrice = 0;
        String udate = getTodayDate();

        if (imei.equals("") || brand.equals("") || model.equals("") || quantity.equals("") || incommingPrice.equals("") || stock_mobiletab_sellingprice.getText().toString().equals("") || udate.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);

        } else {

            sellingPrice = Float.parseFloat(stock_mobiletab_sellingprice.getText().toString());
            String gst = stock_phone_gst.getText().toString();
            float tot = 0f;
            if (!gst.equals("") && stock_phone_gstcheckbox.isSelected()) {

                Float s = Float.parseFloat(gst);

                tot = sellingPrice + (sellingPrice * s / 100);
                sellingPrice = tot;
            }
            if (new PhoneStockHandler().addStock(imei, brand, model, quantity, incommingPrice, sellingPrice, udate) == 1) {
                JOptionPane.showMessageDialog(null, brand + " product was successfully addded to the stock", "Alert", JOptionPane.INFORMATION_MESSAGE);
                stock_mobiletab_imei.setText("");
                stock_mobiletab_brand.setText("");
                stock_mobiletab_modelno.setText("");
                stock_mobiletab_qty.setText("");
                stock_mobiletab_incommingprice.setText("");
                stock_mobiletab_sellingprice.setText("");

                stock_phone_gst.setText("");
                stock_phone_gstcheckbox.setSelected(false);
            } else {
                JOptionPane.showMessageDialog(null, "Sorry, could not add this product. Please try again later", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_stock_mobiletab_addbtnActionPerformed

    private void stock_mobiletab_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_mobiletab_updateActionPerformed
        // TODO add your handling code here:
        if (stock_mobiletab_update.getText().toString().equalsIgnoreCase("SEARCH")) {
            String imei = stock_mobiletab_imei.getText().toString();
            if (imei.equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter imei number of product you want to search", "Alert", JOptionPane.WARNING_MESSAGE);

            } else {
                PhoneModel p = new PhoneStockHandler().getProduct(imei);
                if (p.brand == null) {
                    JOptionPane.showMessageDialog(null, "Product with IMEI " + imei + " is not added in stock", "Alert", JOptionPane.ERROR_MESSAGE);

                } else {
                    stock_mobiletab_imei.setText(p.getImei());
                    stock_mobiletab_brand.setText(p.getBrand());
                    stock_mobiletab_modelno.setText(p.getModel());
                    stock_mobiletab_qty.setText(String.valueOf(p.getQuantity()));
                    stock_mobiletab_incommingprice.setText(p.getIncommingPrice());
                    stock_mobiletab_sellingprice.setText(String.valueOf(p.getSellingPrice()));

                    stock_mobiletab_update.setText("UPDATE");
                }

            }

        } else {
            String imei = stock_mobiletab_imei.getText().toString();
            String brand = stock_mobiletab_brand.getText().toString();
            String model = stock_mobiletab_modelno.getText().toString();
            String quantity = stock_mobiletab_qty.getText().toString();
            String incommingPrice = stock_mobiletab_incommingprice.getText().toString();
            float sellingPrice = 0;
            String udate = getTodayDate();

            if (imei.equals("") || brand.equals("") || model.equals("") || quantity.equals("") || incommingPrice.equals("") || stock_mobiletab_sellingprice.getText().toString().equals("") || udate.equals("")) {
                JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);

            } else {
                String gst = stock_phone_gst.getText().toString();
                sellingPrice = Float.parseFloat(stock_mobiletab_sellingprice.getText().toString());

                float tot = 0f;
                if (!gst.equals("") && stock_phone_gstcheckbox.isSelected()) {

                    Float s = Float.parseFloat(gst);

                    tot = sellingPrice + (sellingPrice * s / 100);
                    sellingPrice = tot;
                }
                if (new PhoneStockHandler().updateStock(imei, brand, model, quantity, incommingPrice, sellingPrice, udate) == 1) {
                    JOptionPane.showMessageDialog(null, brand + " product was successfully updated ", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    stock_mobiletab_update.setText("SEARCH");

                } else {
                    JOptionPane.showMessageDialog(null, "Sorry, could not add this product. Please try again later", "Alert", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_stock_mobiletab_updateActionPerformed

    private void stock_mobiletab_deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_mobiletab_deletebtnActionPerformed
        // TODO add your handling code here:
        String imei = stock_mobiletab_imei.getText().toString();
        if (imei.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter imei number of product you want to search", "Alert", JOptionPane.WARNING_MESSAGE);

        } else {

            if (new PhoneStockHandler().deleteStock(imei) == 1) {
                JOptionPane.showMessageDialog(null, "Product with IMEI " + imei + " is deleted from stock", "Alert", JOptionPane.INFORMATION_MESSAGE);
                stock_mobiletab_imei.setText("");
                stock_mobiletab_brand.setText("");
                stock_mobiletab_modelno.setText("");
                stock_mobiletab_qty.setText("");
                stock_mobiletab_incommingprice.setText("");
                stock_mobiletab_sellingprice.setText("");
            } else {

                JOptionPane.showMessageDialog(null, "Failed to delete product with IMEI " + imei + ". Try after sometime.", "Alert", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_stock_mobiletab_deletebtnActionPerformed

    private void stock_mobiletab_resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_mobiletab_resetbtnActionPerformed
        // TODO add your handling code here:
        stock_mobiletab_imei.setText("");
        stock_mobiletab_brand.setText("");
        stock_mobiletab_modelno.setText("");
        stock_mobiletab_qty.setText("");
        stock_mobiletab_incommingprice.setText("");
        stock_mobiletab_sellingprice.setText("");
        stock_mobiletab_update.setText("SEARCH");
        stock_phone_gst.setText("");
        stock_phone_gstcheckbox.setSelected(false);
    }//GEN-LAST:event_stock_mobiletab_resetbtnActionPerformed

    private void stock_accessories_addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_accessories_addbtnActionPerformed
        // TODO add your handling code here:
        String pid = stock_accessories_productid.getText().toString();
        String brand = stock_accessories_brand.getText().toString();
        String model = stock_accessories_modelno.getText().toString();
        String quantity = stock_accessories_qty.getText().toString();
        String incommingPrice = stock_accessories_incommingprice.getText().toString();
        String type = stock_accessories_producttype.getSelectedItem().toString();
        float sellingPrice = 0;
        String udate = getTodayDate();

        if (pid.equals("") || type.equals("-- select or type --") || brand.equals("") || model.equals("") || quantity.equals("") || incommingPrice.equals("") || stock_accessories_sellingprice.getText().toString().equals("") || udate.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);

        } else {

            sellingPrice = Float.parseFloat(stock_accessories_sellingprice.getText().toString());
            String gst = stock_accessories_gst.getText().toString();
            float tot = 0f;
            if (!gst.equals("") && stock_accessories_gstcheckbox1.isSelected()) {

                Float s = Float.parseFloat(gst);

                tot = sellingPrice + (sellingPrice * s / 100);
                sellingPrice = tot;
            }

            if (new AccessoriesStockHandler().addStock(pid, brand, model, quantity, incommingPrice, sellingPrice, udate, type) == 1) {
                JOptionPane.showMessageDialog(null, brand + " product was successfully addded to the stock", "Alert", JOptionPane.INFORMATION_MESSAGE);
                stock_accessories_productid.setText("");
                stock_accessories_brand.setText("");
                stock_accessories_modelno.setText("");
                stock_accessories_qty.setText("");
                stock_accessories_incommingprice.setText("");
                stock_accessories_sellingprice.setText("");
                stock_accessories_producttype.setSelectedIndex(0);

            } else {
                JOptionPane.showMessageDialog(null, "Sorry, could not add this product. Please try again later", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_stock_accessories_addbtnActionPerformed

    private void stock_accessories_resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_accessories_resetbtnActionPerformed
        // TODO add your handling code here:
        stock_accessories_productid.setText("");
        stock_accessories_brand.setText("");
        stock_accessories_modelno.setText("");
        stock_accessories_qty.setText("");
        stock_accessories_incommingprice.setText("");
        stock_accessories_sellingprice.setText("");
        stock_accessories_producttype.setSelectedIndex(0);
        stock_accessories_gst.setText("");
        stock_accessories_searchbtn.setText("SEARCH");
    }//GEN-LAST:event_stock_accessories_resetbtnActionPerformed

    private void stock_accessories_searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_accessories_searchbtnActionPerformed
        // TODO add your handling code here:
        if (stock_accessories_searchbtn.getText().toString().equalsIgnoreCase("SEARCH")) {
            String pid = stock_accessories_productid.getText().toString();
            String type = stock_accessories_producttype.getSelectedItem().toString();
            if (pid.equals("") || type.equals("-- select or type --")) {
                JOptionPane.showMessageDialog(null, "Enter product ID and select the type of product.", "Alert", JOptionPane.WARNING_MESSAGE);
            } else {
                AccessoriesModel a = new AccessoriesStockHandler().getProduct(pid, type);
                if (a.brand != null) {
                    stock_accessories_productid.setText(a.getpID());
                    stock_accessories_brand.setText(a.getBrand());
                    stock_accessories_modelno.setText(a.getModel());
                    stock_accessories_qty.setText(String.valueOf(a.getQuantity()));
                    stock_accessories_incommingprice.setText(a.getIncommingPrice());
                    stock_accessories_sellingprice.setText(String.valueOf(a.getSellingPrice()));

                    stock_accessories_searchbtn.setText("UPDATE");
                } else {
                    JOptionPane.showMessageDialog(null, pid + " product in type " + type + " is not in stock.", "Alert", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            String pid = stock_accessories_productid.getText().toString();
            String brand = stock_accessories_brand.getText().toString();
            String model = stock_accessories_modelno.getText().toString();
            String quantity = stock_accessories_qty.getText().toString();
            String incommingPrice = stock_accessories_incommingprice.getText().toString();
            String type = stock_accessories_producttype.getSelectedItem().toString();
            float sellingPrice = 0;
            String udate = getTodayDate();

            if (pid.equals("") || type.equals("-- select or type --") || brand.equals("") || model.equals("") || quantity.equals("") || incommingPrice.equals("") || stock_accessories_sellingprice.getText().toString().equals("") || udate.equals("")) {
                JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);

            } else {
                sellingPrice = Float.parseFloat(stock_accessories_sellingprice.getText().toString());
                String gst = stock_accessories_gst.getText().toString();
                float tot = 0f;
                if (!gst.equals("") && stock_accessories_gstcheckbox1.isSelected()) {

                    Float s = Float.parseFloat(gst);

                    tot = sellingPrice + (sellingPrice * s / 100);
                    sellingPrice = tot;
                }

                if (new AccessoriesStockHandler().updateStock(pid, brand, model, quantity, incommingPrice, sellingPrice, udate, type) == 1) {
                    JOptionPane.showMessageDialog(null, brand + " product was successfully updated in stock", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    stock_accessories_searchbtn.setText("SEARCH");

                } else {
                    JOptionPane.showMessageDialog(null, "Sorry, could not update this product. Please try again later", "Alert", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_stock_accessories_searchbtnActionPerformed

    private void stock_accessories_deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_accessories_deletebtnActionPerformed
        // TODO add your handling code here:
        String pid = stock_accessories_productid.getText().toString();
        String type = stock_accessories_producttype.getSelectedItem().toString();
        if (pid.equals("") || type.equals("-- select or type --")) {
            JOptionPane.showMessageDialog(null, "Enter product ID and select the type of product.", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            if (new AccessoriesStockHandler().deleteStock(pid, type) == 1) {
                JOptionPane.showMessageDialog(null, type + " product was deleted from stock", "Alert", JOptionPane.INFORMATION_MESSAGE);
                stock_accessories_productid.setText("");
                stock_accessories_brand.setText("");
                stock_accessories_modelno.setText("");
                stock_accessories_qty.setText("");
                stock_accessories_incommingprice.setText("");
                stock_accessories_sellingprice.setText("");
                stock_accessories_producttype.setSelectedIndex(0);

                stock_accessories_searchbtn.setText("SEARCH");
            } else {
                JOptionPane.showMessageDialog(null, "Sorry, could not delete this product. Please try again later", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_stock_accessories_deletebtnActionPerformed

    private void searchstock_searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchstock_searchbtnActionPerformed
        // TODO add your handling code here:
        String searchindex = searchstock_combo.getSelectedItem().toString();
        String searchdata = searchstock_searchfield.getText().toString();
        String accSeachIndex = "";
        if (searchindex.equalsIgnoreCase("IMEI")) {
            accSeachIndex = "PRODUCTID";
        } else {
            accSeachIndex = searchindex;
        }
        if (searchdata.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter something to search", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else {
            ResultSet phoneRS = new PhoneStockHandler().searchProductWithIndex(searchindex, searchdata);
            ResultSet accessoriesRS = new AccessoriesStockHandler().searchProductWithIndex(accSeachIndex, searchdata);

            DefaultTableModel phonetableModel = (DefaultTableModel) searchstock_mobile_table.getModel();
            for (int i = 0; i < phonetableModel.getRowCount(); i++) {
                phonetableModel.removeRow(i);
            }

            DefaultTableModel accessoriestableModel = (DefaultTableModel) searchstock_accessories_table.getModel();
            for (int i = 0; i < accessoriestableModel.getRowCount(); i++) {
                accessoriestableModel.removeRow(i);
            }

            try {
                if (phoneRS != null && phoneRS.next()) {
                    searchstock_mobile_table.setModel(Utilities.resultSetToTableModel(phoneRS));
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to fetch Mobile Product", "Alert", JOptionPane.ERROR_MESSAGE);
                }

                if (accessoriesRS != null && accessoriesRS.next()) {
                    searchstock_accessories_table.setModel(Utilities.resultSetToTableModel(accessoriesRS));
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to fetch Accessories Product", "Alert", JOptionPane.ERROR_MESSAGE);
                }
                 searchstock_phone_item_count.setText(String.valueOf(searchstock_mobile_table.getRowCount())+" items");
                 searchstock_access_item_count.setText(String.valueOf(searchstock_accessories_table.getRowCount())+" items");
            } catch (SQLException ex) {
                ex.printStackTrace();

            } finally {
                try {
                    phoneRS.close();
                    accessoriesRS.close();
                } catch (SQLException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_searchstock_searchbtnActionPerformed

    private void bill_checkinstock_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_checkinstock_btnActionPerformed
        // TODO add your handling code here:

        String pid = bill_pid.getText().toString();
        String type = bill_productcategory_combo.getSelectedItem().toString();
        if (type.equalsIgnoreCase("Mobile")) {
            PhoneModel p = new PhoneStockHandler().getProduct(pid);
            if (p.brand == null || p.getQuantity() <= 0) {
                JOptionPane.showMessageDialog(null, "Product not available in stock", "Alert", JOptionPane.ERROR_MESSAGE);

            } else {
                bill_qty.setText(String.valueOf(p.getQuantity()));
                bill_price_per_dicountprice.setText("0.00");
                bill_price_per_unit.setText((String.valueOf(p.getSellingPrice())));
                bill_Model.setText(p.getModel());
                bill_brand.setText(p.getBrand());
                bill_incomming.setText(p.getIncommingPrice());
            }

        } else {
            AccessoriesModel a = new AccessoriesStockHandler().getProduct(pid, type);
            if (a.brand == null || a.getQuantity() <= 0) {
                JOptionPane.showMessageDialog(null, "Product not available in stock", "Alert", JOptionPane.ERROR_MESSAGE);

            } else {

                bill_qty.setText(String.valueOf(a.getQuantity()));
                bill_price_per_dicountprice.setText("0.00");
                bill_price_per_unit.setText((String.valueOf(a.getSellingPrice())));
                bill_Model.setText(a.getModel());
                bill_brand.setText(a.getBrand());
                bill_incomming.setText(a.getIncommingPrice());
            }
        }
        bill_gstrate.setText("0");
        if (bill_qty.getText().toString().equals("") || bill_price_per_unit.getText().toString().equals("")
                || bill_price_per_dicountprice.getText().toString().equals("") || bill_gstrate.getText().toString().equals("")) {

        } else {
            int q = Integer.parseInt(bill_qty.getText().toString());
            Float pPerUnit = Float.parseFloat(bill_price_per_unit.getText().toString());
            Float dics = Float.parseFloat(bill_price_per_dicountprice.getText().toString());
            Float gst = Float.parseFloat(bill_gstrate.getText().toString()) / 100;
            Float total = (q * pPerUnit) - dics;
            total = total + (gst * total);

            StockQty = q;
            bill_price_per_total.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_bill_checkinstock_btnActionPerformed

    private void bill_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_qtyKeyReleased
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_bill_qtyKeyReleased

    private void bill_price_per_unitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_price_per_unitKeyReleased
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_bill_price_per_unitKeyReleased

    private void bill_price_per_dicountpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_price_per_dicountpriceKeyReleased
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_bill_price_per_dicountpriceKeyReleased

    private void bill_gstrateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_gstrateKeyReleased
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_bill_gstrateKeyReleased

    private void bill_include_checkboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bill_include_checkboxStateChanged
        // TODO add your handling code here:
        updateTotal();
    }//GEN-LAST:event_bill_include_checkboxStateChanged
    int StockQty = 0;
    private void bill_addproduct_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_addproduct_btnActionPerformed
        // TODO add your handling code here:
        String pid = bill_pid.getText().toString();
        String qty = bill_qty.getText().toString();
        String type = bill_productcategory_combo.getSelectedItem().toString();
        String brand = bill_brand.getText().toString();
        String model = bill_Model.getText().toString();
        String pricePerUnit = bill_price_per_unit.getText().toString();
        String disc = bill_price_per_dicountprice.getText().toString();
        String total = bill_price_per_total.getText().toString();

        InvoiceModel imodel = new InvoiceModel();

        if (pid.equals("") || qty.equals("") || type.equals("") || brand.equals("")
                || model.equals("") || pricePerUnit.equals("") || disc.equals("") || total.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill all the details", "Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            imodel.setpCategory(type);
            imodel.setpID(pid);
            imodel.setpBrand(brand);
            imodel.setpModel(model);
            imodel.setpSellingPrice(Float.parseFloat(pricePerUnit));
            imodel.setDiscount(Float.parseFloat(disc));
            imodel.setTotal(Float.parseFloat(total));
            imodel.setQty(Integer.parseInt(qty));

            if (Integer.parseInt(qty) > StockQty) {
                JOptionPane.showMessageDialog(null, "You have " + StockQty + " pieces in the stock.\n You cannot sell " + qty + " pieces.", "Alert", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (Integer.parseInt(qty) <= 0) {
                JOptionPane.showMessageDialog(null, "Quantity cannot be 0 or negetive", "Alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int res = JOptionPane.showConfirmDialog(null, String.format("Quantity of %s %s will decrease by %s. Are you sure?", brand, model, qty), "Alert", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                if (type.equalsIgnoreCase("Mobile")) {
                    if(bill_dummybill.isSelected()) {
                        netAmout += Float.parseFloat(total);
                        String ip = bill_incomming.getText().toString();
                        float fip = (ip.equals("")?0.00f:new IncommingPrice().decodePrice(ip));
                        netIncomming += fip;
                        bill_netAmount.setText(String.valueOf(netAmout));
                        invoiceList.add(imodel);
                        resetInvoiceForm();
                    }
                    else
                    if (new PhoneStockHandler().decreamentStockQuantity(pid, qty) == 1) {
                        netAmout += Float.parseFloat(total);
                        String ip = bill_incomming.getText().toString();
                        float fip = (ip.equals("")?0.00f:new IncommingPrice().decodePrice(ip));
                        netIncomming += fip;
                        bill_netAmount.setText(String.valueOf(netAmout));
                        invoiceList.add(imodel);
                        resetInvoiceForm();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to add product. Try againg later", "Alert", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    if (new AccessoriesStockHandler().decreamentStockQuantity(pid, type, qty) == 1) {
                        netAmout += Float.parseFloat(total);
                        String ip = bill_incomming.getText().toString();
                        float fip = (ip.equals("")?0.00f:new IncommingPrice().decodePrice(ip));
                        netIncomming += fip;
                        bill_netAmount.setText(String.valueOf(netAmout));
                        invoiceList.add(imodel);
                        resetInvoiceForm();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to add product. Try againg later", "Alert", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                return;
            }
        }
    }//GEN-LAST:event_bill_addproduct_btnActionPerformed

    private void bill_brandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_brandKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_brandKeyReleased

    private void bill_ModelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_ModelKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_ModelKeyReleased

    private void gmail_send_mail_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmail_send_mail_btnActionPerformed
        // TODO add your handling code here:
        String to = gmail_to.getText().toString();
        String subject = gmail_subject.getText().toString();
        String Message = gmail_message.getText().toString();
        String from = gmail_from.getText().toString();
        String apppassword = gmail_application_password.getText().toString();

        String file = gmail_selected_file.getText().toString();

        if (to.equals("") || subject.equals("") || Message.equals("") || from.equals("") || apppassword.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory.Fill in all the details", "Alert", JOptionPane.INFORMATION_MESSAGE);

        } else if (file.equalsIgnoreCase("File name")) {
            JOptionPane.showMessageDialog(null, "Choose a file to send mail.", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else {

            if (new SendMail().send(to, subject, Message, from, apppassword, file)) {
                JOptionPane.showMessageDialog(null, "Mail sent to " + to + " successfully", "Alert", JOptionPane.INFORMATION_MESSAGE);
                gmail_to.setText("");
                gmail_subject.setText("");
                gmail_message.setText("");
                gmail_selected_file.setText("File name");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to send email. Check your Internet connection. \nAlso verify you gmail username and app password is correct.", "Alert", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_gmail_send_mail_btnActionPerformed

    private void gmail_filechoose_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmail_filechoose_btnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filepath = f.getAbsolutePath();
        gmail_selected_file.setText(filepath);
    }//GEN-LAST:event_gmail_filechoose_btnActionPerformed

    private void bill_resetbill_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_resetbill_btnActionPerformed
        // TODO add your handling code here:
        resetInvoiceForm();
        netAmout = 0.0f;
        netIncomming = 0.0f;
        bill_netAmount.setText("0.00");
        invoiceList.clear();
        bill_clientname.setText("");
        bill_clientaddress.setText("");
        bill_clientphone.setText("");
    }//GEN-LAST:event_bill_resetbill_btnActionPerformed

    private void settings_profile_tab_savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_profile_tab_savebtnActionPerformed
        // TODO add your handling code here:
        String n = settings_profile_tab_name.getText().toString();
        String un = settings_profile_tab_username.getText().toString();
        String pass = settings_profile_tab_password.getText().toString();
        String cnfPass = settings_profile_tab_confirmpassword.getText().toString();

        if (n.equals("") || un.equals("") || pass.equals("") || cnfPass.equals("")) {
            JOptionPane.showMessageDialog(null, "All field are mandatory. Please fill in all the details.", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else if (!pass.equals(cnfPass)) {
            JOptionPane.showMessageDialog(null, "Password and Confirm password are not same", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else if (new UserHandler().changePasword(un, pass) == 1) {
            JOptionPane.showMessageDialog(null, "Password changed successfully", "Alert", JOptionPane.INFORMATION_MESSAGE);
            settings_profile_tab_password.setText("");
            settings_profile_tab_confirmpassword.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Failed to change password. Enter correct username and try again.", "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_settings_profile_tab_savebtnActionPerformed

    private void settings_gmail_tab_savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_gmail_tab_savebtnActionPerformed
        // TODO add your handling code here:
        String gmail = settings_gmail_tab_email.getText().toString();
        String password = settings_gmail_tab_password.getText().toString();
        String un = settings_profile_tab_username.getText().toString();
        if (gmail.equals("") || gmail.equals("") || un.equals("")) {
            JOptionPane.showMessageDialog(null, "Username, email or application password cannot be empty", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else if (new UserHandler().updateGmailAccount(un, gmail, password) == 1) {
            JOptionPane.showMessageDialog(null, "Your Gmail account is linked. This credential will be saved", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Failed to link Gmail account. Enter correct username.", "Alert", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_settings_gmail_tab_savebtnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String dateToday = setdate("dd-MM-yyyy");
        ResultSet phoneRS = new AccessoriesStockHandler().getAllProduct();
        File f = new File("ACCESSORIES_Backup_" + dateToday + ".csv");
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            if (!f.exists()) {
                f.createNewFile();
            }
            fw = new FileWriter(f.getAbsoluteFile());
            bw = new BufferedWriter(fw);
            bw.write("ID,PRODUCTID,BRAND,MODEL,QUANTITY,TYPE,INCOMMING PRICE,SELLING PRICE,LAST UPDATE\n\n");

            while (phoneRS.next()) {
                bw.write(String.format("%s,%s,%s,%s,%s,%s,%s,%s,%s\n",
                        phoneRS.getInt(1), phoneRS.getString(2), phoneRS.getString(3), phoneRS.getString(4),
                        phoneRS.getInt(5), phoneRS.getString(6), phoneRS.getString(7), phoneRS.getFloat(8),
                        phoneRS.getString(9)));
            }

            JOptionPane.showMessageDialog(null, "Backup is taken and save with file name ACCESSORIES_Backup_" + dateToday + ".csv. \nOpen this file with MS Excel or any Spreadsheet software", "Alert", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed to take backup.\nERROR : " + e.getMessage(), "Alert", JOptionPane.ERROR_MESSAGE);
        } finally {

            try {
                if (bw != null) {
                    bw.close();
                }

                if (fw != null) {
                    fw.close();
                }

            } catch (IOException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void bill_generatebill_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_generatebill_btnActionPerformed
        // TODO add your handling code here:
        String clientName = bill_clientname.getText().toString();
        String clientPhone = bill_clientphone.getText().toString();
        String clientAddress = bill_clientaddress.getText().toString();
        String invoiceNo = bill_invoiceno.getText().toString();
        float pendingAmt = 0.00f;
        if(invoiceList.size()==0)
            return;
        String gst = (bill_gstrate.getText().toString().equals("")?"0.0":bill_gstrate.getText().toString());
        System.err.println(gst);
        if(!bill_price_per_pendingamt.getText().toString().equals(""))
            pendingAmt = Float.parseFloat(bill_price_per_pendingamt.getText().toString());
        if(bill_dummybill.isSelected()) {
            int res = JOptionPane.showConfirmDialog(null, "You are going to create a blank invoice and stock will not be affected. \nAre you sure?", "Alert", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                if (new GenerateInvoice().save(clientName, clientPhone, clientAddress, netAmout, "logo.jpg", "signature.jpg", invoiceList, invoiceNo,pendingAmt,gst)) {
                    JOptionPane.showMessageDialog(null, "Invoice was created - "+invoiceNo, "Alert", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(null, "Failed to generate invoice", "Alert", JOptionPane.ERROR_MESSAGE);
                }

            }

        } else {
            if (new GenerateInvoice().save(clientName, clientPhone, clientAddress, netAmout, "logo.jpg", "signature.jpg", invoiceList, invoiceNo,pendingAmt,gst)) {
                JOptionPane.showMessageDialog(null, "Invoice was created - " + invoiceNo, "Alert", JOptionPane.INFORMATION_MESSAGE);
                
                try{
                    int res = new ClientHandler().addClient(clientName, clientPhone, clientAddress, invoiceNo, String.valueOf(netAmout), gst, String.valueOf(pendingAmt), String.valueOf(netAmout-netIncomming), getTodayDate());
                    System.err.println(res);
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Failed to generate invoice", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_bill_generatebill_btnActionPerformed

    private void stock_phone_gstKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_phone_gstKeyReleased
        // TODO add your handling code here:g

    }//GEN-LAST:event_stock_phone_gstKeyReleased

    private void stock_phone_gstcheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stock_phone_gstcheckboxStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_stock_phone_gstcheckboxStateChanged

    private void stock_mobiletab_sellingpriceInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_stock_mobiletab_sellingpriceInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_mobiletab_sellingpriceInputMethodTextChanged

    private void stock_mobiletab_sellingpriceVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_stock_mobiletab_sellingpriceVetoableChange
        // TODO add your handling code here:

    }//GEN-LAST:event_stock_mobiletab_sellingpriceVetoableChange

    private void stock_mobiletab_sellingpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_mobiletab_sellingpriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_mobiletab_sellingpriceKeyTyped

    private void stock_mobiletab_sellingpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_mobiletab_sellingpriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_mobiletab_sellingpriceKeyPressed

    private void stock_mobiletab_sellingpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stock_mobiletab_sellingpriceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_stock_mobiletab_sellingpriceKeyReleased

    private void jLabel63MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel63MouseReleased
        // TODO add your handling code here:
        barcode_name.setText("Barcode_" + System.currentTimeMillis());
        changeMenu("barcode");
    }//GEN-LAST:event_jLabel63MouseReleased

    private void jLabel65MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel65MouseReleased
        // TODO add your handling code here:
        changeMenu("client");
    }//GEN-LAST:event_jLabel65MouseReleased

    private void barcode_createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcode_createbtnActionPerformed
        // TODO add your handling code here:

        String fileName = barcode_name.getText().toString();
        String content = barcode_content.getText().toString();
        if (fileName.equals("") || content.equals("")) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Fill in all the details.", "Alert", JOptionPane.INFORMATION_MESSAGE);

        } else {
            try {
                if (new GenerateBarcode(content, fileName).encode()) {
                    barcode_preview.setIcon(null);
                    ImageIcon iconLogo = new ImageIcon(new ImageIcon("Barcodes" + File.separator + fileName + ".png").getImage().getScaledInstance(barcode_preview.getWidth(), barcode_preview.getHeight(), Image.SCALE_SMOOTH));
                    barcode_preview.setIcon(iconLogo);
                    barcode_preview.setEnabled(true);
                    barcode_content.setText("");
                }
            } catch (Exception ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_barcode_createbtnActionPerformed

    private void bill_printbill_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_printbill_btnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filepath = f.getAbsolutePath();
        System.out.println(filepath);
        try {
            DocFlavor flavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
        PrintRequestAttributeSet requestAttributeSet = new HashPrintRequestAttributeSet();
PrintService[] services = PrintServiceLookup.lookupPrintServices(flavor, requestAttributeSet);
		PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();
		PrintService service = ServiceUI.printDialog(null, 100, 100, services, defaultService, flavor,
				requestAttributeSet);            
            FileInputStream fis = new FileInputStream(filepath);

            Doc pdfDoc = new SimpleDoc(fis, null, null);

            DocPrintJob printJob = service.createPrintJob();

            printJob.print(pdfDoc, new HashPrintRequestAttributeSet());

            fis.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Printing Error", JOptionPane.ERROR_MESSAGE);
        } catch (PrintException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bill_printbill_btnActionPerformed

    private void bill_price_per_pendingamtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_price_per_pendingamtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_price_per_pendingamtActionPerformed

    private void bill_dummybillStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bill_dummybillStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_dummybillStateChanged

    private void bill_incommingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_incommingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_incommingActionPerformed

    private void client_edit_totlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_edit_totlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_client_edit_totlActionPerformed

    private void client_edit_phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_edit_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_client_edit_phoneActionPerformed

    private void client_edit_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_edit_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_client_edit_idActionPerformed

    private void client_view_viewallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_view_viewallActionPerformed
        ResultSet rs = new ClientHandler().getAllClients();
        ArrayList<ClientModel> list = new ArrayList<>();

        DefaultTableModel tableModel = (DefaultTableModel) client_view_table.getModel();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            tableModel.removeRow(i);
        }

        try {
            if (rs != null && rs.next()) {
                client_view_table.setModel(Utilities.resultSetToTableModel(rs));
            } else {
                JOptionPane.showMessageDialog(null, "Failed to fetch client", "Alert", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();

        } finally {
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_client_view_viewallActionPerformed

    private void client_view_searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_view_searchbtnActionPerformed
        // TODO add your handling code here:
        String type = client_view_searchtype.getSelectedItem().toString();
        String content = client_view_searchcontent.getText().toString();
        
       
        ResultSet rs = new ClientHandler().getAllClients(type,content);
        ArrayList<ClientModel> list = new ArrayList<>();

        DefaultTableModel tableModel = (DefaultTableModel) client_view_table.getModel();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            tableModel.removeRow(i);
        }

        try {
            if (rs != null && rs.next()) {
                client_view_table.setModel(Utilities.resultSetToTableModel(rs));
            } else {
                JOptionPane.showMessageDialog(null, "Failed to fetch client", "Alert", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();

        } finally {
            try {
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_client_view_searchbtnActionPerformed

    private void client_edit_searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_edit_searchbtnActionPerformed
        // TODO add your handling code here:
        String id = client_edit_id.getText().toString();
        if(id.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Enter Id from view tab to update.", "Alert", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            ClientModel p = new ClientHandler().getClient(id);
            if(p.cname == null)
            {
                JOptionPane.showMessageDialog(null, "Client not found", "Alert", JOptionPane.ERROR_MESSAGE);

            }
            else
            {
                client_edit_name.setText(p.getCname());
                client_edit_phone.setText(p.getCphone());
                client_edit_address.setText(p.getCaddress());
                client_edit_number.setText(p.getInvno());
                client_edit_totl.setText(p.getTotal());
                client_edit_gst.setText(p.getGst());
                client_edit_pendingpayment.setText(p.getPendingpayment());
                client_edit_profit.setText(p.getPl());
                
           }
        }
    }//GEN-LAST:event_client_edit_searchbtnActionPerformed

    private void client_edit_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_edit_editActionPerformed
        // TODO add your handling code here:
                String id = client_edit_id.getText().toString();
                String name = client_edit_name.getText().toString();
                String phone = client_edit_phone.getText().toString();
                String address = client_edit_address.getText().toString();
                String number = client_edit_number.getText().toString();
                String total = client_edit_totl.getText().toString();
                String gst = client_edit_gst.getText().toString();
                String pendingpayment = client_edit_pendingpayment.getText().toString();
                String profit = client_edit_profit.getText().toString();
                
                if(id.equals("") || name.equals("") || phone.equals("") || address.equals("") || number.equals("") || 
                        total.equals("") || gst.equals("") || pendingpayment.equals("") || profit.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "All fields are mandetory.", "Alert", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    if(new ClientHandler().updateClient(id, name, phone, address, number, total, gst, pendingpayment, profit, getTodayDate())==1)
                    {
                        JOptionPane.showMessageDialog(null, "Successfully updated.", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Failed to update.", "Alert", JOptionPane.ERROR_MESSAGE);
                    }
                }
    }//GEN-LAST:event_client_edit_editActionPerformed

    private void client_edit_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_client_edit_deleteActionPerformed
        // TODO add your handling code here:
        String id = client_edit_id.getText().toString();
        if(id.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Enter Id from view tab to update.", "Alert", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            if(new ClientHandler().deleteClient(id)==1)
            {
                JOptionPane.showMessageDialog(null, "Successfully Deleted.", "Alert", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Failed to delete.", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_client_edit_deleteActionPerformed

    private void jLabel82MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel82MouseReleased
        // TODO add your handling code here:
        ArrayList<String> month = new ArrayList<>();
        month.add("-");
        for(int i =1;i<=31;i++)
        {
            if(i>=1 && i<=9)
                month.add("0"+String.valueOf(i));
            else
                month.add(String.valueOf(i));
        }
        ArrayList<String> year = new ArrayList<>();
        year.add("-");
        Calendar now = Calendar.getInstance();   // Gets the current date and time
        int y = now.get(Calendar.YEAR);
        System.err.println(y);
        for(int i =y;i>=1999;i--)
            year.add(String.valueOf(i));
        
       
        
        profit_month.setModel(new javax.swing.DefaultComboBoxModel(month.toArray()));
        profit_year.setModel(new javax.swing.DefaultComboBoxModel(year.toArray()));
        changeMenu("profit");
    }//GEN-LAST:event_jLabel82MouseReleased

    private void profit_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profit_calculateActionPerformed
        // TODO add your handling code here:
        
        String month = profit_month.getSelectedItem().toString();
        String year = profit_year.getSelectedItem().toString();
        
        String date = "";
        if(month.equals("-") && year.equals("-"))
            return;
        
        if(!month.equals("-") && year.equals("-"))
            date = month;
        
        if(month.equals("-") && !year.equals("-"))
            date = year;
        
        if(!month.equals("-") && !year.equals("-"))
            date = year+"-"+month;
        System.err.println(date);
        if(!date.equals(""))
            profit_value.setText(String.valueOf(new ClientHandler().calculateProfit(date)));
    }//GEN-LAST:event_profit_calculateActionPerformed

    private void client_edit_totlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_client_edit_totlKeyReleased
        // TODO add your handling code here:
        float total = Float.parseFloat(client_edit_totl.getText().toString());
        float pending = Float.parseFloat(client_edit_pendingpayment.getText().toString());
        
                
    }//GEN-LAST:event_client_edit_totlKeyReleased

    private void resetInvoiceForm() {
        bill_pid.setText("");
        bill_qty.setText("");
        bill_price_per_dicountprice.setText("0.00");
        bill_price_per_unit.setText("");
        bill_Model.setText("");
        bill_brand.setText("");
        bill_productcategory_combo.setSelectedIndex(0);
        bill_invoiceno.setText("INV" + System.currentTimeMillis());
        bill_price_per_total.setText("");
//        bill_gstrate.setText("");
    }

    private void updateTotal() {
        if (bill_qty.getText().toString().equals("") || bill_price_per_unit.getText().toString().equals("") || bill_price_per_dicountprice.getText().toString().equals("") || bill_gstrate.getText().toString().equals("")) {

        } else {
            Float q = Float.parseFloat(bill_qty.getText().toString());
            Float pPerUnit = Float.parseFloat(bill_price_per_unit.getText().toString());
            Float dics = Float.parseFloat(bill_price_per_dicountprice.getText().toString());

            Float gst = 0.0f;
            if (bill_include_checkbox.isSelected()) {
                gst = Float.parseFloat(bill_gstrate.getText().toString()) / 100;
            }

            Float total = (q * pPerUnit) - dics;
            //total = total + (gst * total);

            bill_price_per_total.setText(String.valueOf(total));
        }
    }

    private String getTodayDate() {

        Date today = new Date();
        SimpleDateFormat parseFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = parseFormat.format(today);
        return date;
    }
    
    private String getTodayDate(String d) {

        Date today = new Date();
        SimpleDateFormat parseFormat = new SimpleDateFormat(d);
        String date = parseFormat.format(today);
        return date;
    }

    private void changeMenu(String menuName) {
        settings.setVisible(false);
        bill.setVisible(false);
        Gmail.setVisible(false);
        stock.setVisible(false);
        searchStock.setVisible(false);
        barcode.setVisible(false);
        client.setVisible(false);
        Profit.setVisible(false);
                
        switch (menuName) {
            case "stock":
                stock.setVisible(true);
                Heading.setText("Stock");
                break;

            case "seachstock":
                searchStock.setVisible(true);
                Heading.setText("Search in Stock");
                break;

            case "bill":
                bill.setVisible(true);
                Heading.setText("Generate Bill");
                break;

            case "gmail":
                Heading.setText("Send Bill");
                Gmail.setVisible(true);
                break;

            case "barcode":
                Heading.setText("Create Barcode");
                barcode.setVisible(true);
                break;

            case "client":
                Heading.setText("Client");
                client.setVisible(true);
                break;

            case "settings":
                Heading.setText("Settings");
                settings.setVisible(true);
                break;
                
            case "profit":
                Heading.setText("Profit");
                Profit.setVisible(true);
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Gmail;
    private javax.swing.JPanel Header;
    private javax.swing.JLabel Heading;
    private javax.swing.JPanel Profit;
    private javax.swing.JTabbedPane Stock;
    private javax.swing.JPanel accessoriesTabPanel;
    private javax.swing.JPanel barcode;
    private javax.swing.JTextField barcode_content;
    private javax.swing.JButton barcode_createbtn;
    private javax.swing.JTextField barcode_name;
    private javax.swing.JLabel barcode_preview;
    private javax.swing.JPanel bill;
    private javax.swing.JTextField bill_Model;
    private javax.swing.JButton bill_addproduct_btn;
    private javax.swing.JTextField bill_brand;
    private javax.swing.JButton bill_checkinstock_btn;
    private javax.swing.JTextArea bill_clientaddress;
    private javax.swing.JTextField bill_clientname;
    private javax.swing.JTextField bill_clientphone;
    private javax.swing.JCheckBox bill_dummybill;
    private javax.swing.JButton bill_generatebill_btn;
    private javax.swing.JTextField bill_gstrate;
    private javax.swing.JCheckBox bill_include_checkbox;
    private javax.swing.JTextField bill_incomming;
    private javax.swing.JTextField bill_invoiceno;
    private javax.swing.JLabel bill_netAmount;
    private javax.swing.JTextField bill_pid;
    private javax.swing.JTextField bill_price_per_dicountprice;
    private javax.swing.JTextField bill_price_per_pendingamt;
    private javax.swing.JTextField bill_price_per_total;
    private javax.swing.JTextField bill_price_per_unit;
    private javax.swing.JButton bill_printbill_btn;
    private javax.swing.JComboBox<String> bill_productcategory_combo;
    private javax.swing.JTextField bill_qty;
    private javax.swing.JButton bill_resetbill_btn;
    private javax.swing.JPanel client;
    private javax.swing.JTextField client_edit_address;
    private javax.swing.JButton client_edit_delete;
    private javax.swing.JButton client_edit_edit;
    private javax.swing.JTextField client_edit_gst;
    private javax.swing.JTextField client_edit_id;
    private javax.swing.JTextField client_edit_name;
    private javax.swing.JTextField client_edit_number;
    private javax.swing.JTextField client_edit_pendingpayment;
    private javax.swing.JTextField client_edit_phone;
    private javax.swing.JTextField client_edit_profit;
    private javax.swing.JButton client_edit_searchbtn;
    private javax.swing.JTextField client_edit_totl;
    private javax.swing.JButton client_view_searchbtn;
    private javax.swing.JTextField client_view_searchcontent;
    private javax.swing.JComboBox<String> client_view_searchtype;
    private javax.swing.JTable client_view_table;
    private javax.swing.JButton client_view_viewall;
    private javax.swing.JPanel content;
    private javax.swing.JTextField create_account_name;
    private javax.swing.JPasswordField create_account_password;
    private javax.swing.JTextField create_account_username;
    private javax.swing.JPasswordField gmail_application_password;
    private javax.swing.JButton gmail_filechoose_btn;
    private javax.swing.JTextField gmail_from;
    private javax.swing.JTextArea gmail_message;
    private javax.swing.JLabel gmail_selected_file;
    private javax.swing.JButton gmail_send_mail_btn;
    private javax.swing.JTextField gmail_subject;
    private javax.swing.JTextField gmail_to;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel jlable1;
    private javax.swing.JPanel landingPanel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton login_btn;
    private javax.swing.JPasswordField login_password;
    private javax.swing.JTextField login_username;
    private javax.swing.JPanel menu;
    private javax.swing.JPanel phoneTabPanel;
    private javax.swing.JButton profit_calculate;
    private javax.swing.JComboBox<String> profit_month;
    private javax.swing.JLabel profit_value;
    private javax.swing.JComboBox<String> profit_year;
    private javax.swing.JPanel seachstock_searchtool_panel;
    private javax.swing.JPanel searchStock;
    private javax.swing.JLabel searchstock_access_item_count;
    private javax.swing.JPanel searchstock_accessories_tab;
    private javax.swing.JTable searchstock_accessories_table;
    private javax.swing.JComboBox<String> searchstock_combo;
    private javax.swing.JPanel searchstock_mobile_tab;
    private javax.swing.JTable searchstock_mobile_table;
    private javax.swing.JLabel searchstock_phone_item_count;
    private javax.swing.JButton searchstock_searchbtn;
    private javax.swing.JTextField searchstock_searchfield;
    private javax.swing.JButton searchstock_viewallbtn;
    private javax.swing.JPanel settings;
    private javax.swing.JPanel settings_backup_tab;
    private javax.swing.JPanel settings_gmail_tab;
    private javax.swing.JTextField settings_gmail_tab_email;
    private javax.swing.JTextField settings_gmail_tab_password;
    private javax.swing.JButton settings_gmail_tab_savebtn;
    private javax.swing.JPanel settings_profile_tab;
    private javax.swing.JTextField settings_profile_tab_confirmpassword;
    private javax.swing.JTextField settings_profile_tab_name;
    private javax.swing.JTextField settings_profile_tab_password;
    private javax.swing.JButton settings_profile_tab_savebtn;
    private javax.swing.JTextField settings_profile_tab_username;
    private javax.swing.JPanel signupPanel;
    private javax.swing.JScrollPane srachstock_mobile_jtable;
    private javax.swing.JPanel stock;
    private javax.swing.JButton stock_accessories_addbtn;
    private javax.swing.JTextField stock_accessories_brand;
    private javax.swing.JButton stock_accessories_deletebtn;
    private javax.swing.JTextField stock_accessories_gst;
    private javax.swing.JCheckBox stock_accessories_gstcheckbox1;
    private javax.swing.JTextField stock_accessories_incommingprice;
    private javax.swing.JTextField stock_accessories_modelno;
    private javax.swing.JTextField stock_accessories_productid;
    private javax.swing.JComboBox<String> stock_accessories_producttype;
    private javax.swing.JTextField stock_accessories_qty;
    private javax.swing.JButton stock_accessories_resetbtn;
    private javax.swing.JButton stock_accessories_searchbtn;
    private javax.swing.JTextField stock_accessories_sellingprice;
    private javax.swing.JButton stock_mobiletab_addbtn;
    private javax.swing.JTextField stock_mobiletab_brand;
    private javax.swing.JButton stock_mobiletab_deletebtn;
    private javax.swing.JTextField stock_mobiletab_imei;
    private javax.swing.JTextField stock_mobiletab_incommingprice;
    private javax.swing.JTextField stock_mobiletab_modelno;
    private javax.swing.JTextField stock_mobiletab_qty;
    private javax.swing.JButton stock_mobiletab_resetbtn;
    private javax.swing.JTextField stock_mobiletab_sellingprice;
    private javax.swing.JButton stock_mobiletab_update;
    private javax.swing.JTextField stock_phone_gst;
    private javax.swing.JCheckBox stock_phone_gstcheckbox;
    private javax.swing.JPanel welcomePanel;
    // End of variables declaration//GEN-END:variables

    private void initFunctionalities() {
        new CreateAllTables().runExecution();
    }

}
